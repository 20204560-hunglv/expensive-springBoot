# Why: Docker Compose cho development environment
# Design decision: Sử dụng Docker để đảm bảo consistency across environments
# Business requirement: Cần environment setup nhanh chóng cho development team

version: '3.8'

services:
  # Why: MySQL database cho tất cả services
  mysql:
    image: mysql:8.0
    container_name: expensive-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: expensive_db
      MYSQL_USER: expensive_user
      MYSQL_PASSWORD: expensive_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./setup-mysql.sql:/docker-entrypoint-initdb.d/setup-mysql.sql
    networks:
      - expensive-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Why: Service Discovery - Eureka Server
  service-discovery:
    build:
      context: .
      dockerfile: service-discovery/Dockerfile
    container_name: expensive-service-discovery
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
    networks:
      - expensive-network

  # Why: Config Server
  config-service:
    build:
      context: .
      dockerfile: config-service/Dockerfile
    container_name: expensive-config-service
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - service-discovery
    networks:
      - expensive-network

  # Why: API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: expensive-api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - service-discovery
      - config-service
    networks:
      - expensive-network

  # Why: Auth Service
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: expensive-auth-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - service-discovery
      - config-service
    networks:
      - expensive-network

  # Why: User Service
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: expensive-user-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - service-discovery
      - config-service
    networks:
      - expensive-network

  # Why: Expense Service
  expense-service:
    build:
      context: .
      dockerfile: expense-service/Dockerfile
    container_name: expensive-expense-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - service-discovery
      - config-service
    networks:
      - expensive-network

  # Why: Category Service
  category-service:
    build:
      context: .
      dockerfile: category-service/Dockerfile
    container_name: expensive-category-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - service-discovery
      - config-service
    networks:
      - expensive-network

volumes:
  mysql_data:

networks:
  expensive-network:
    driver: bridge
